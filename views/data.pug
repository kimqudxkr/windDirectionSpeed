extends layout

block content
  link(rel='stylesheet', href='/stylesheets/info.css')

  script.
    document.getElementById("data").className="current";

    //- 사용자 정의 설정에서 달력으로 날짜 선택하기 위한 datepicker 옵션들
    $( function() {
      $.datepicker.setDefaults({
        defaultDate: new Date(),
        dateFormat: 'yy-mm-dd',
        showMonthAfterYear: true,
        monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
        monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
        dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
        changeMonth: true,
        changeYear: true,
      });

      $("#startDay").datepicker().val(moment().format('YYYY-MM-DD'));
      $("#endDay").datepicker().val(moment().format('YYYY-MM-DD'));
    });
    
    //- 자료를 조회시 데이터가 많을 때 스크롤 내리기 힘드니 pagination 작동
    jQuery('document').ready(function() {
      pagination();

      jQuery('.pagination li:first-child').addClass("disabled");
    });

    //- 기간 설정 옵션 중 주간에서 선택 월의 주가 최대 몇까지 있는지 구하기 위한 함수
    const getWeek = (dateFormat) => {
      const the = new Date(dateFormat);
      const newYear = new Date(the.getFullYear(),0,1);      
      let day = newYear.getDay();
      day = (day >= 0 ? day : day + 7);
      const daynum = Math.floor((the.getTime() - newYear.getTime() -
        (the.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;
      let weeknum;
      if(day < 4) {
        weeknum = Math.floor((daynum+day-1)/7) + 1;
        if(weeknum > 52) {
          const nYear = new Date(the.getFullYear() + 1,0,1);
          let nday = nYear.getDay();
          nday = nday >= 0 ? nday : nday + 7;
          weeknum = nday < 4 ? 1 : 53;
        }
      }
      else {
        weeknum = Math.floor((daynum+day-1)/7);
      }
      return weeknum;
    }
    
    //- 기간 설정에서 주간 선택 시 몇 주인지를 나타내는 select box 옵션 변경 함수
    const changeWeek = () => {
      const year = document.getElementById("yearTerm").value;
      const month = document.getElementById("monthTerm").value;

      const first = getWeek(`${year}-${month}-01`);
      const last = getWeek(new Date(year, month, -1));

      const diff = last-first+1;

      $('#weekTerm').empty();

      for(let i = 0; i<diff; i++) {
        const option = $("<option value=\""+(i+1)+"\">"+(i+1)+"주차</option>");
        $('#weekTerm').append(option);
      }
    }

    //- 조회 버튼을 클릭시 작동하는 함수로 백엔드로 데이터를 넘기고 받는 함수
    const search = () => {
      const form =  document.getElementById("infoSearchForm");
      
      //- 기간 설정 select box에서 선택한 값에 따라 백엔드에서 SQL문에서 조건으로 사용하기 위한 변수
      const termSelectBox = document.getElementById("term");
      const termSetting = termSelectBox.options[termSelectBox.selectedIndex].value;

      $.ajax({
        data: {
          'termSetting': termSetting,
          'startDay': document.getElementById("startDay").value,
          'startHour': document.getElementById("startHour").value,
          'endDay': document.getElementById("endDay").value,
          'endHour': document.getElementById("endHour").value,
          'year': document.getElementById("yearTerm").value,
          'quater': document.getElementById("quaterTerm").value,
          'month': document.getElementById("monthTerm").value,
          'week': document.getElementById("weekTerm").value,
        }, 
        type: 'get', 
        dataType : 'html',
        url: "/data/api/search",
        contentType: 'application/json', 
        success: (result) => {
          $("#info-table > tbody").html(result);
          jQuery('.pagination *').remove();         //- 조회를 눌러 테이블이 새로고침 될 때 마다 pagination 새로고침
          pagination();
        },
        error: (err) => {
          console.log(err)
        }
      })
    }

    //- 기간 설정 select box 선택할 때 마다 그에 해당하는 select box들을 보이고, 사라지게 하는 함수
    const selectDate = (e) => {
      if(e.value != 'user') {
        document.getElementById("startDay").disabled = true;
        document.getElementById("endDay").disabled = true;
        document.getElementById("startHour").disabled = true;
        document.getElementById("endHour").disabled = true;
      } 
      else {
        document.getElementById("startDay").disabled = false;
        document.getElementById("endDay").disabled = false;
        document.getElementById("startHour").disabled = false;
        document.getElementById("endHour").disabled = false;
      }

      if(e.value == 'year') 
        document.getElementById("yearTerm").style.display = "inline";
      else 
        document.getElementById("yearTerm").style.display = "none";
      
      if(e.value == 'quater') {
        document.getElementById("yearTerm").style.display = "inline";
        document.getElementById("quaterTerm").style.display = "inline";
      } 
      else {
        document.getElementById("quaterTerm").style.display = "none";
      }

      if(e.value == 'month') {
        document.getElementById("yearTerm").style.display = "inline";
        document.getElementById("monthTerm").style.display = "inline";
      } 
      else {
        document.getElementById("monthTerm").style.display = "none";
      }

      if(e.value == 'week') {
        document.getElementById("yearTerm").style.display = "inline";
        document.getElementById("monthTerm").style.display = "inline";
        document.getElementById("weekTerm").style.display = "inline";
      }
      else 
        document.getElementById("weekTerm").style.display = "none";
    }

    //- 테이블의 데이터를 한번에 10개씩 보여주는 pagination 함수
    const pagination = () => {
      const rowNum = 10;      //- 한 페이지에 보여줄 데이터 갯수
      let $tr = jQuery('tbody tr');
      const totalRowNum = $tr.length;
      let pagesNum = 0;

      if(totalRowNum % rowNum == 0) {
        pagesNum = totalRowNum / rowNum;
      }
      else if(totalRowNum % rowNum > 0) {
        pagesNum = totalRowNum / rowNum;
        pagesNum++;
        pagesNum = Math.floor(pagesNum++);
      }

      //- 나눈 갯수만큼 페이지 버튼 생성
      for(let i=1; i<=pagesNum; i++) {
        jQuery('.pagination').append(`<li><button class="btn-dark">${i}</button></li>`);
        jQuery('.pagination li:nth-child(1)').addClass("active");
        jQuery('.pagination button').addClass("pagination-link");
      }

      $tr.each(function(i) {
        jQuery(this).hide();

        if(i+1 <= rowNum) {
          $tr.eq(i).show();
        }
      });

      //- 첫 페이지 선택을 표시하기 위해 버튼의 클래스 제거 -> 흰색 버튼 됨
      jQuery('.pagination li:nth-child(1)').children(":first").removeClass("btn-dark");

      //- pagination의 페이지 버튼을 클릭할 때 작동하는 함수
      jQuery('.pagination button').click('.pagination-link', function(e) {
        e.preventDefault();
        $tr.hide();
        let page = jQuery(this).text();
        let tmp = page - 1;
        let start = tmp * rowNum;
        let currentLink = tmp;

        //- 해당 페이지 확인 중을 표시하기 위해 선택된 버튼의 클래스를 제거하여 흰색으로 표시
        jQuery('.pagination button').addClass("btn-dark");
        jQuery(this).removeClass("btn-dark");
        jQuery('.pagination li').removeClass("active");
        jQuery(this).parent().addClass("active");

        for(let i=0; i<rowNum; i++) {
          $tr.eq(start+i).show();
        }

        if(tmp >= 1) {
          jQuery('.pagination li:first-child').removeClass("disabled");
        }
        else {
          jQuery('.pagination li:first-child').addClass("disabled");
        }
      });
    }
  
  #info-container.container-fluid
    .row.info-title
      .col-12 측정 자료 조회
    .row.info-search
      .col-12
        .row
          .col-3 ■ 기간 설정
          .col-2
            select#term(type="text", style="width:150px", onchange="selectDate(this)")
              option(value="user") 사용자 정의
              option(value="year") 연간
              option(value="quater") 분기간
              option(value="month") 월간
              option(value="week") 주간
          .col-6
            select#yearTerm(type='text', style='display:none; margin:5px', onchange="changeWeek()")
              -for(let i=2020; i>2005;i--)
                option(value=i)=(i)+'년'
            select#quaterTerm(type='text', style='display:none; margin:5px')
              -for(let i=1; i<5;i++)
                option(value=i)=(i)+'사분기'
            select#monthTerm(type='text', style='display:none; margin:5px', onchange="changeWeek()")
              -for(let i=1; i<13;i++)
                option(value=i)=(i)+'월'
            select#weekTerm(type='text', style='display:none; margin:5px')
              -for(let i=1; i<7;i++)
                option(value=i)=(i)+'주차'
            button.btn.btn-dark(onClick='search()') 조회
        .row
          .col-3 ■ 사용자 정의 설정    
          .col-4 시작 날짜 : 
            input#startDay(type="input", style="margin:8px; width:100px")
            select#startHour(style="width:60px; margin:8px")
                -for (let i = 0; i < 24; i++)
                  option(value=i < 10 ? '0' + i : i)= (i < 10 ? '0' + i : i)+'시'
          .col-4 종료 날짜 : 
            input#endDay(type="input", style="margin:8px; width:100px")  
            select#endHour(style="width:60px; margin:8px")
                -for (let i = 0; i < 24; i++)
                  option(value=i < 10 ? '0' + i : i)= (i < 10 ? '0' + i : i)+'시'
    .row.info-table
      .col-12
        div(style='margin-left:470px') 측정자료(수치) 
        table#info-table
          thead
            tr
              th 날짜<br/>(연-월-일)
              th 풍향
              th 평균 풍속(m/s)
          tbody
            each map in datas
              tr
                td #{map.rgstDt}
                td 
                  img.wind-direction-icon(src="images/Black_Arrow.png", alt="wind-direction" style={ width: '40px', transform: `rotate(${map.windDirection}deg)`})
                td #{map.windSpeed} (m/s)
        br
        ul(class='pagination')